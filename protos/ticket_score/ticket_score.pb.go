// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.6.1
// source: ticket_score/ticket_score.proto

package protos

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAggregatedCategoryScoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period *PeriodEntity `protobuf:"bytes,1,opt,name=period,proto3" json:"period,omitempty"`
}

func (x *GetAggregatedCategoryScoresRequest) Reset() {
	*x = GetAggregatedCategoryScoresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_score_ticket_score_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAggregatedCategoryScoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAggregatedCategoryScoresRequest) ProtoMessage() {}

func (x *GetAggregatedCategoryScoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_score_ticket_score_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAggregatedCategoryScoresRequest.ProtoReflect.Descriptor instead.
func (*GetAggregatedCategoryScoresRequest) Descriptor() ([]byte, []int) {
	return file_ticket_score_ticket_score_proto_rawDescGZIP(), []int{0}
}

func (x *GetAggregatedCategoryScoresRequest) GetPeriod() *PeriodEntity {
	if x != nil {
		return x.Period
	}
	return nil
}

type GetAggregatedCategoryScoresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scores []*ScoreEntity `protobuf:"bytes,1,rep,name=scores,proto3" json:"scores,omitempty"`
}

func (x *GetAggregatedCategoryScoresResponse) Reset() {
	*x = GetAggregatedCategoryScoresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_score_ticket_score_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAggregatedCategoryScoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAggregatedCategoryScoresResponse) ProtoMessage() {}

func (x *GetAggregatedCategoryScoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_score_ticket_score_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAggregatedCategoryScoresResponse.ProtoReflect.Descriptor instead.
func (*GetAggregatedCategoryScoresResponse) Descriptor() ([]byte, []int) {
	return file_ticket_score_ticket_score_proto_rawDescGZIP(), []int{1}
}

func (x *GetAggregatedCategoryScoresResponse) GetScores() []*ScoreEntity {
	if x != nil {
		return x.Scores
	}
	return nil
}

type GetScoresByTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period *PeriodEntity `protobuf:"bytes,1,opt,name=period,proto3" json:"period,omitempty"`
}

func (x *GetScoresByTicketRequest) Reset() {
	*x = GetScoresByTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_score_ticket_score_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScoresByTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScoresByTicketRequest) ProtoMessage() {}

func (x *GetScoresByTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_score_ticket_score_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScoresByTicketRequest.ProtoReflect.Descriptor instead.
func (*GetScoresByTicketRequest) Descriptor() ([]byte, []int) {
	return file_ticket_score_ticket_score_proto_rawDescGZIP(), []int{2}
}

func (x *GetScoresByTicketRequest) GetPeriod() *PeriodEntity {
	if x != nil {
		return x.Period
	}
	return nil
}

type GetScoresByTicketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickets []*TicketScoreEntity `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
}

func (x *GetScoresByTicketResponse) Reset() {
	*x = GetScoresByTicketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_score_ticket_score_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScoresByTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScoresByTicketResponse) ProtoMessage() {}

func (x *GetScoresByTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_score_ticket_score_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScoresByTicketResponse.ProtoReflect.Descriptor instead.
func (*GetScoresByTicketResponse) Descriptor() ([]byte, []int) {
	return file_ticket_score_ticket_score_proto_rawDescGZIP(), []int{3}
}

func (x *GetScoresByTicketResponse) GetTickets() []*TicketScoreEntity {
	if x != nil {
		return x.Tickets
	}
	return nil
}

type GetOverallQualityScoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period *PeriodEntity `protobuf:"bytes,1,opt,name=period,proto3" json:"period,omitempty"`
}

func (x *GetOverallQualityScoresRequest) Reset() {
	*x = GetOverallQualityScoresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_score_ticket_score_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOverallQualityScoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOverallQualityScoresRequest) ProtoMessage() {}

func (x *GetOverallQualityScoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_score_ticket_score_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOverallQualityScoresRequest.ProtoReflect.Descriptor instead.
func (*GetOverallQualityScoresRequest) Descriptor() ([]byte, []int) {
	return file_ticket_score_ticket_score_proto_rawDescGZIP(), []int{4}
}

func (x *GetOverallQualityScoresRequest) GetPeriod() *PeriodEntity {
	if x != nil {
		return x.Period
	}
	return nil
}

type GetOverallQualityScoresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score int64 `protobuf:"varint,1,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *GetOverallQualityScoresResponse) Reset() {
	*x = GetOverallQualityScoresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_score_ticket_score_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOverallQualityScoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOverallQualityScoresResponse) ProtoMessage() {}

func (x *GetOverallQualityScoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_score_ticket_score_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOverallQualityScoresResponse.ProtoReflect.Descriptor instead.
func (*GetOverallQualityScoresResponse) Descriptor() ([]byte, []int) {
	return file_ticket_score_ticket_score_proto_rawDescGZIP(), []int{5}
}

func (x *GetOverallQualityScoresResponse) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type GetPeriodOverPeriodScoreChangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeriodFrom *PeriodEntity `protobuf:"bytes,1,opt,name=periodFrom,proto3" json:"periodFrom,omitempty"`
	PeriodTo   *PeriodEntity `protobuf:"bytes,2,opt,name=periodTo,proto3" json:"periodTo,omitempty"`
}

func (x *GetPeriodOverPeriodScoreChangeRequest) Reset() {
	*x = GetPeriodOverPeriodScoreChangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_score_ticket_score_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeriodOverPeriodScoreChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeriodOverPeriodScoreChangeRequest) ProtoMessage() {}

func (x *GetPeriodOverPeriodScoreChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_score_ticket_score_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeriodOverPeriodScoreChangeRequest.ProtoReflect.Descriptor instead.
func (*GetPeriodOverPeriodScoreChangeRequest) Descriptor() ([]byte, []int) {
	return file_ticket_score_ticket_score_proto_rawDescGZIP(), []int{6}
}

func (x *GetPeriodOverPeriodScoreChangeRequest) GetPeriodFrom() *PeriodEntity {
	if x != nil {
		return x.PeriodFrom
	}
	return nil
}

func (x *GetPeriodOverPeriodScoreChangeRequest) GetPeriodTo() *PeriodEntity {
	if x != nil {
		return x.PeriodTo
	}
	return nil
}

type GetPeriodOverPeriodScoreChangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Change int64 `protobuf:"varint,1,opt,name=change,proto3" json:"change,omitempty"`
}

func (x *GetPeriodOverPeriodScoreChangeResponse) Reset() {
	*x = GetPeriodOverPeriodScoreChangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_score_ticket_score_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeriodOverPeriodScoreChangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeriodOverPeriodScoreChangeResponse) ProtoMessage() {}

func (x *GetPeriodOverPeriodScoreChangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_score_ticket_score_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeriodOverPeriodScoreChangeResponse.ProtoReflect.Descriptor instead.
func (*GetPeriodOverPeriodScoreChangeResponse) Descriptor() ([]byte, []int) {
	return file_ticket_score_ticket_score_proto_rawDescGZIP(), []int{7}
}

func (x *GetPeriodOverPeriodScoreChangeResponse) GetChange() int64 {
	if x != nil {
		return x.Change
	}
	return 0
}

type TicketScoreEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64                    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Categories []*TickeToCategoryEntity `protobuf:"bytes,2,rep,name=categories,proto3" json:"categories,omitempty"`
}

func (x *TicketScoreEntity) Reset() {
	*x = TicketScoreEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_score_ticket_score_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketScoreEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketScoreEntity) ProtoMessage() {}

func (x *TicketScoreEntity) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_score_ticket_score_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketScoreEntity.ProtoReflect.Descriptor instead.
func (*TicketScoreEntity) Descriptor() ([]byte, []int) {
	return file_ticket_score_ticket_score_proto_rawDescGZIP(), []int{8}
}

func (x *TicketScoreEntity) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TicketScoreEntity) GetCategories() []*TickeToCategoryEntity {
	if x != nil {
		return x.Categories
	}
	return nil
}

type TickeToCategoryEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category string `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Score    int64  `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *TickeToCategoryEntity) Reset() {
	*x = TickeToCategoryEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_score_ticket_score_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickeToCategoryEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickeToCategoryEntity) ProtoMessage() {}

func (x *TickeToCategoryEntity) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_score_ticket_score_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickeToCategoryEntity.ProtoReflect.Descriptor instead.
func (*TickeToCategoryEntity) Descriptor() ([]byte, []int) {
	return file_ticket_score_ticket_score_proto_rawDescGZIP(), []int{9}
}

func (x *TickeToCategoryEntity) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *TickeToCategoryEntity) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type PeriodEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   *timestamp.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *PeriodEntity) Reset() {
	*x = PeriodEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_score_ticket_score_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeriodEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeriodEntity) ProtoMessage() {}

func (x *PeriodEntity) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_score_ticket_score_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeriodEntity.ProtoReflect.Descriptor instead.
func (*PeriodEntity) Descriptor() ([]byte, []int) {
	return file_ticket_score_ticket_score_proto_rawDescGZIP(), []int{10}
}

func (x *PeriodEntity) GetStartTime() *timestamp.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *PeriodEntity) GetEndTime() *timestamp.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type ScoreEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category   string       `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Ratings    int64        `protobuf:"varint,2,opt,name=ratings,proto3" json:"ratings,omitempty"`
	Score      int64        `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	ScoreDates []*ScoreDate `protobuf:"bytes,4,rep,name=scoreDates,proto3" json:"scoreDates,omitempty"`
}

func (x *ScoreEntity) Reset() {
	*x = ScoreEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_score_ticket_score_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreEntity) ProtoMessage() {}

func (x *ScoreEntity) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_score_ticket_score_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreEntity.ProtoReflect.Descriptor instead.
func (*ScoreEntity) Descriptor() ([]byte, []int) {
	return file_ticket_score_ticket_score_proto_rawDescGZIP(), []int{11}
}

func (x *ScoreEntity) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ScoreEntity) GetRatings() int64 {
	if x != nil {
		return x.Ratings
	}
	return 0
}

func (x *ScoreEntity) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ScoreEntity) GetScoreDates() []*ScoreDate {
	if x != nil {
		return x.ScoreDates
	}
	return nil
}

type ScoreDate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date  *timestamp.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Unit  string               `protobuf:"bytes,2,opt,name=unit,proto3" json:"unit,omitempty"`
	Score int64                `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *ScoreDate) Reset() {
	*x = ScoreDate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_score_ticket_score_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreDate) ProtoMessage() {}

func (x *ScoreDate) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_score_ticket_score_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreDate.ProtoReflect.Descriptor instead.
func (*ScoreDate) Descriptor() ([]byte, []int) {
	return file_ticket_score_ticket_score_proto_rawDescGZIP(), []int{12}
}

func (x *ScoreDate) GetDate() *timestamp.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *ScoreDate) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *ScoreDate) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

var File_ticket_score_ticket_score_proto protoreflect.FileDescriptor

var file_ticket_score_ticket_score_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x52, 0x0a, 0x22, 0x47, 0x65,
	0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2c, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x52,
	0x0a, 0x23, 0x47, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x22, 0x48, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x42,
	0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c,
	0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x50, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x42, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x4e,
	0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x51, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2c, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x37,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x51, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x54, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x6f, 0x22, 0x40, 0x0a, 0x26, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x62, 0x0a, 0x11, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x54, 0x6f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22,
	0x49, 0x0a, 0x15, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x54, 0x6f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x0c, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8c, 0x01,
	0x0a, 0x0b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x52, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x73, 0x22, 0x65, 0x0a, 0x09,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x32, 0xcd, 0x03, 0x0a, 0x0c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x12, 0x76, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x12, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x42, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x42, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x42, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4f, 0x76, 0x65,
	0x72, 0x61, 0x6c, 0x6c, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x76,
	0x65, 0x72, 0x61, 0x6c, 0x6c, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x51, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x7f, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4f,
	0x76, 0x65, 0x72, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x61, 0x61, 0x74, 0x2f, 0x73, 0x6f, 0x66, 0x74, 0x77,
	0x61, 0x72, 0x65, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x2d, 0x74, 0x65, 0x73, 0x74,
	0x2d, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ticket_score_ticket_score_proto_rawDescOnce sync.Once
	file_ticket_score_ticket_score_proto_rawDescData = file_ticket_score_ticket_score_proto_rawDesc
)

func file_ticket_score_ticket_score_proto_rawDescGZIP() []byte {
	file_ticket_score_ticket_score_proto_rawDescOnce.Do(func() {
		file_ticket_score_ticket_score_proto_rawDescData = protoimpl.X.CompressGZIP(file_ticket_score_ticket_score_proto_rawDescData)
	})
	return file_ticket_score_ticket_score_proto_rawDescData
}

var file_ticket_score_ticket_score_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_ticket_score_ticket_score_proto_goTypes = []any{
	(*GetAggregatedCategoryScoresRequest)(nil),     // 0: protos.GetAggregatedCategoryScoresRequest
	(*GetAggregatedCategoryScoresResponse)(nil),    // 1: protos.GetAggregatedCategoryScoresResponse
	(*GetScoresByTicketRequest)(nil),               // 2: protos.GetScoresByTicketRequest
	(*GetScoresByTicketResponse)(nil),              // 3: protos.GetScoresByTicketResponse
	(*GetOverallQualityScoresRequest)(nil),         // 4: protos.GetOverallQualityScoresRequest
	(*GetOverallQualityScoresResponse)(nil),        // 5: protos.GetOverallQualityScoresResponse
	(*GetPeriodOverPeriodScoreChangeRequest)(nil),  // 6: protos.GetPeriodOverPeriodScoreChangeRequest
	(*GetPeriodOverPeriodScoreChangeResponse)(nil), // 7: protos.GetPeriodOverPeriodScoreChangeResponse
	(*TicketScoreEntity)(nil),                      // 8: protos.TicketScoreEntity
	(*TickeToCategoryEntity)(nil),                  // 9: protos.TickeToCategoryEntity
	(*PeriodEntity)(nil),                           // 10: protos.PeriodEntity
	(*ScoreEntity)(nil),                            // 11: protos.ScoreEntity
	(*ScoreDate)(nil),                              // 12: protos.ScoreDate
	(*timestamp.Timestamp)(nil),                    // 13: google.protobuf.Timestamp
}
var file_ticket_score_ticket_score_proto_depIdxs = []int32{
	10, // 0: protos.GetAggregatedCategoryScoresRequest.period:type_name -> protos.PeriodEntity
	11, // 1: protos.GetAggregatedCategoryScoresResponse.scores:type_name -> protos.ScoreEntity
	10, // 2: protos.GetScoresByTicketRequest.period:type_name -> protos.PeriodEntity
	8,  // 3: protos.GetScoresByTicketResponse.tickets:type_name -> protos.TicketScoreEntity
	10, // 4: protos.GetOverallQualityScoresRequest.period:type_name -> protos.PeriodEntity
	10, // 5: protos.GetPeriodOverPeriodScoreChangeRequest.periodFrom:type_name -> protos.PeriodEntity
	10, // 6: protos.GetPeriodOverPeriodScoreChangeRequest.periodTo:type_name -> protos.PeriodEntity
	9,  // 7: protos.TicketScoreEntity.categories:type_name -> protos.TickeToCategoryEntity
	13, // 8: protos.PeriodEntity.start_time:type_name -> google.protobuf.Timestamp
	13, // 9: protos.PeriodEntity.end_time:type_name -> google.protobuf.Timestamp
	12, // 10: protos.ScoreEntity.scoreDates:type_name -> protos.ScoreDate
	13, // 11: protos.ScoreDate.date:type_name -> google.protobuf.Timestamp
	0,  // 12: protos.TicketScores.GetAggregatedCategoryScores:input_type -> protos.GetAggregatedCategoryScoresRequest
	2,  // 13: protos.TicketScores.GetScoresByTicket:input_type -> protos.GetScoresByTicketRequest
	4,  // 14: protos.TicketScores.GetOverallQualityScores:input_type -> protos.GetOverallQualityScoresRequest
	6,  // 15: protos.TicketScores.GetPeriodOverPeriodScoreChange:input_type -> protos.GetPeriodOverPeriodScoreChangeRequest
	1,  // 16: protos.TicketScores.GetAggregatedCategoryScores:output_type -> protos.GetAggregatedCategoryScoresResponse
	3,  // 17: protos.TicketScores.GetScoresByTicket:output_type -> protos.GetScoresByTicketResponse
	5,  // 18: protos.TicketScores.GetOverallQualityScores:output_type -> protos.GetOverallQualityScoresResponse
	7,  // 19: protos.TicketScores.GetPeriodOverPeriodScoreChange:output_type -> protos.GetPeriodOverPeriodScoreChangeResponse
	16, // [16:20] is the sub-list for method output_type
	12, // [12:16] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_ticket_score_ticket_score_proto_init() }
func file_ticket_score_ticket_score_proto_init() {
	if File_ticket_score_ticket_score_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ticket_score_ticket_score_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetAggregatedCategoryScoresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_score_ticket_score_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetAggregatedCategoryScoresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_score_ticket_score_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetScoresByTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_score_ticket_score_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetScoresByTicketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_score_ticket_score_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetOverallQualityScoresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_score_ticket_score_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetOverallQualityScoresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_score_ticket_score_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetPeriodOverPeriodScoreChangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_score_ticket_score_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetPeriodOverPeriodScoreChangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_score_ticket_score_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*TicketScoreEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_score_ticket_score_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*TickeToCategoryEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_score_ticket_score_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*PeriodEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_score_ticket_score_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ScoreEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_score_ticket_score_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ScoreDate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ticket_score_ticket_score_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ticket_score_ticket_score_proto_goTypes,
		DependencyIndexes: file_ticket_score_ticket_score_proto_depIdxs,
		MessageInfos:      file_ticket_score_ticket_score_proto_msgTypes,
	}.Build()
	File_ticket_score_ticket_score_proto = out.File
	file_ticket_score_ticket_score_proto_rawDesc = nil
	file_ticket_score_ticket_score_proto_goTypes = nil
	file_ticket_score_ticket_score_proto_depIdxs = nil
}
